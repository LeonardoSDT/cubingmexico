# Generated by Django 4.1.7 on 2023-05-02 01:22

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Competition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_column='name', max_length=50)),
                ('cityName', models.CharField(db_column='cityName', max_length=50)),
                ('countryId', models.CharField(db_column='countryId', max_length=50)),
                ('information', models.TextField(blank=True, db_column='information', null=True)),
                ('year', models.IntegerField(db_column='year')),
                ('month', models.IntegerField(db_column='month')),
                ('day', models.IntegerField(db_column='day')),
                ('endMonth', models.IntegerField(db_column='endMonth')),
                ('endDay', models.IntegerField(db_column='endDay')),
                ('eventSpecs', models.CharField(blank=True, db_column='eventSpecs', max_length=256, null=True)),
                ('wcaDelegate', models.TextField(blank=True, db_column='wcaDelegate', null=True)),
                ('organiser', models.TextField(blank=True, db_column='organiser', null=True)),
                ('venue', models.CharField(db_column='venue', max_length=240)),
                ('venueAddress', models.CharField(blank=True, db_column='venueAddress', max_length=120, null=True)),
                ('venueDetails', models.CharField(blank=True, db_column='venueDetails', max_length=120, null=True)),
                ('external_website', models.CharField(blank=True, db_column='external_website', max_length=200, null=True)),
                ('cellName', models.CharField(db_column='cellName', max_length=45)),
                ('latitude', models.IntegerField(blank=True, db_column='latitude', null=True)),
                ('longitude', models.IntegerField(blank=True, db_column='longitude', null=True)),
            ],
            options={
                'db_table': 'Competitions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Continent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_column='name', max_length=50)),
                ('recordName', models.CharField(db_column='recordName', max_length=3)),
                ('latitude', models.IntegerField(db_column='latitude')),
                ('longitude', models.IntegerField(db_column='longitude')),
                ('zoom', models.IntegerField(db_column='zoom')),
            ],
            options={
                'db_table': 'Continents',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_column='name', max_length=50)),
                ('continentId', models.CharField(db_column='continentId', max_length=50)),
                ('latitude', models.IntegerField(db_column='latitude')),
                ('longitude', models.IntegerField(db_column='longitude')),
                ('zoom', models.IntegerField(db_column='zoom')),
                ('iso2', models.CharField(blank=True, db_column='iso2', max_length=2, null=True)),
            ],
            options={
                'db_table': 'Countries',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_column='name', max_length=54)),
                ('rank', models.IntegerField(db_column='rank')),
                ('format', models.CharField(db_column='format', max_length=10)),
                ('cellName', models.CharField(db_column='cellName', max_length=45)),
            ],
            options={
                'db_table': 'Events',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Format',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_column='name', max_length=50)),
                ('sort_by', models.CharField(db_column='sort_by', max_length=255)),
                ('sort_by_second', models.CharField(db_column='sort_by_second', max_length=255)),
                ('expected_solve_count', models.IntegerField(db_column='expected_solve_count')),
                ('trim_fastest_n', models.IntegerField(db_column='trim_fastest_n')),
                ('trim_slowest_n', models.IntegerField(db_column='trim_slowest_n')),
            ],
            options={
                'db_table': 'Formats',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subid', models.IntegerField(db_column='subid')),
                ('name', models.CharField(db_column='name', max_length=80)),
                ('countryId', models.CharField(db_column='countryId', max_length=50)),
                ('gender', models.CharField(db_column='gender', max_length=1)),
            ],
            options={
                'db_table': 'Persons',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RanksAverage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('personId', models.CharField(db_column='personId', max_length=10)),
                ('eventId', models.CharField(db_column='eventId', max_length=6)),
                ('best', models.IntegerField(db_column='best')),
                ('worldRank', models.IntegerField(db_column='worldRank')),
                ('continentRank', models.IntegerField(db_column='continentRank')),
                ('countryRank', models.IntegerField(db_column='countryRank')),
            ],
            options={
                'db_table': 'RanksAverage',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RanksSingle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('personId', models.CharField(db_column='personId', max_length=10)),
                ('eventId', models.CharField(db_column='eventId', max_length=6)),
                ('best', models.IntegerField(db_column='best')),
                ('worldRank', models.IntegerField(db_column='worldRank')),
                ('continentRank', models.IntegerField(db_column='continentRank')),
                ('countryRank', models.IntegerField(db_column='countryRank')),
            ],
            options={
                'db_table': 'RanksSingle',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Result',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('competitionId', models.CharField(db_column='competitionId', max_length=32)),
                ('eventId', models.CharField(db_column='eventId', max_length=6)),
                ('roundTypeId', models.CharField(db_column='roundTypeId', max_length=1)),
                ('pos', models.IntegerField(db_column='pos')),
                ('best', models.IntegerField(db_column='best')),
                ('average', models.IntegerField(db_column='average')),
                ('personName', models.CharField(blank=True, db_column='personName', max_length=80, null=True)),
                ('personId', models.CharField(db_column='personId', max_length=10)),
                ('personCountryId', models.CharField(blank=True, db_column='personCountryId', max_length=50, null=True)),
                ('formatId', models.CharField(db_column='formatId', max_length=1)),
                ('value1', models.IntegerField(db_column='value1')),
                ('value2', models.IntegerField(db_column='value2')),
                ('value3', models.IntegerField(db_column='value3')),
                ('value4', models.IntegerField(db_column='value4')),
                ('value5', models.IntegerField(db_column='value5')),
                ('regionalSingleRecord', models.CharField(blank=True, db_column='regionalSingleRecord', max_length=3, null=True)),
                ('regionalAverageRecord', models.CharField(blank=True, db_column='regionalAverageRecord', max_length=3, null=True)),
            ],
            options={
                'db_table': 'Results',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RoundTypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rank', models.IntegerField()),
                ('name', models.CharField(max_length=50)),
                ('cellName', models.CharField(max_length=45)),
                ('final', models.IntegerField()),
            ],
            options={
                'db_table': 'RoundTypes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Scramble',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scrambleId', models.IntegerField()),
                ('competitionId', models.CharField(max_length=32)),
                ('eventId', models.CharField(max_length=6)),
                ('roundTypeId', models.CharField(max_length=1)),
                ('groupId', models.CharField(max_length=3)),
                ('isExtra', models.IntegerField()),
                ('scrambleNum', models.IntegerField()),
                ('scramble', models.CharField(max_length=500)),
            ],
            options={
                'db_table': 'Scrambles',
                'managed': False,
            },
        ),
    ]
